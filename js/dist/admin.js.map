{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://@liplum/flarum-trends-widget/webpack/bootstrap","webpack://@liplum/flarum-trends-widget/webpack/runtime/compat get default export","webpack://@liplum/flarum-trends-widget/webpack/runtime/define property getters","webpack://@liplum/flarum-trends-widget/webpack/runtime/hasOwnProperty shorthand","webpack://@liplum/flarum-trends-widget/external root \"flarum.core.compat['admin/app']\"","webpack://@liplum/flarum-trends-widget/external root \"flarum.core.compat['common/app']\"","webpack://@liplum/flarum-trends-widget/external root \"flarum.core.compat['extensions/afrux-forum-widgets-core/common/extend/Widgets']\"","webpack://@liplum/flarum-trends-widget/./node_modules/.pnpm/@babel+runtime@7.26.10/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@liplum/flarum-trends-widget/external root \"flarum.core.compat['extensions/afrux-forum-widgets-core/common/components/Widget']\"","webpack://@liplum/flarum-trends-widget/./src/r.ts","webpack://@liplum/flarum-trends-widget/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@liplum/flarum-trends-widget/external root \"flarum.core.compat['common/utils/ItemList']\"","webpack://@liplum/flarum-trends-widget/external root \"flarum.core.compat['common/components/Link']\"","webpack://@liplum/flarum-trends-widget/./src/common/components/widget.tsx","webpack://@liplum/flarum-trends-widget/./node_modules/.pnpm/@babel+runtime@7.26.10/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@liplum/flarum-trends-widget/./src/admin/index.tsx","webpack://@liplum/flarum-trends-widget/./src/common/register.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['extensions/afrux-forum-widgets-core/common/extend/Widgets'];","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['extensions/afrux-forum-widgets-core/common/components/Widget'];","export const extName = \"liplum-trends-widget\"\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Link'];","import app from 'flarum/common/app';\nimport Widget, { WidgetAttrs } from 'flarum/extensions/afrux-forum-widgets-core/common/components/Widget';\nimport { extName } from '../../r';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Link from 'flarum/common/components/Link';\n\ninterface TrendingDiscussion {\n  type: 'discussions';\n  id: string;\n  attributes: {\n    title: string;\n    commentCount: number;\n    createdAt: string;\n    lastActivityAt: string;\n    shareUrl: string;\n  };\n  relationships: {\n    user: {\n      data: {\n        type: 'users';\n        id: string;\n        attributes: {\n          username: string;\n        };\n      };\n    };\n  };\n}\n\ninterface TrendingDiscussionsResponse {\n  data: TrendingDiscussion[];\n}\n\ninterface TrendsWidgetAttrs extends WidgetAttrs {\n\n}\n\nexport default class TrendsWidget extends Widget<TrendsWidgetAttrs> {\n  loading: boolean = true;\n  trends: TrendingDiscussion[] = [];\n  className(): string {\n    return 'liplum-trends-widget'\n  }\n\n  icon(): string {\n    return \"fas fa-fire-alt\"\n  }\n\n  title(): string {\n    return app.translator.trans(`${extName}.forum.widget.title`) as string\n  }\n\n  content() {\n    if (this.loading) {\n      return <LoadingIndicator />;\n    }\n\n    if (!this.trends || this.trends.length === 0) {\n      return app.translator.trans(`${extName}.forum.widget.empty`);\n    }\n\n    const items = new ItemList();\n\n    this.trends.forEach((trend) => {\n      items.add(\n        trend.id,\n        <div className=\"liplum-trends-item\">\n          <Link href={trend.attributes.shareUrl}>\n            {trend.attributes.title}\n          </Link>\n          <div className=\"liplum-trends-meta\">\n            {app.translator.trans(`${extName}.forum.widget.comments`, { count: trend.attributes.commentCount })}\n          </div>\n        </div>\n      );\n    });\n\n    return <div className=\"liplum-trends-list\">{items.toArray()}</div>;\n  }\n\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n    this.fetchTrends();\n  }\n\n  fetchTrends() {\n    this.loading = true;\n    app.request<TrendingDiscussionsResponse>({\n      method: 'GET',\n      url: app.forum.attribute('apiUrl') + '/trends',\n    })\n      .then((response) => {\n        this.trends = response.data;\n        this.loading = false;\n        m.redraw();\n      })\n      .catch((error) => {\n        console.error('Error fetching trends:', error);\n        this.loading = false;\n        m.redraw();\n      });\n  }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","import app from 'flarum/admin/app';\nimport commonApp from 'flarum/common/app';\nimport registerWidget from '../common/register';\nimport { extName } from '../r';\n\napp.initializers.add(extName, () => {\n  registerWidget(commonApp);\n\n  app.extensionData\n    .for(extName)\n});\n","import Application from 'flarum/common/Application';\nimport Widgets from 'flarum/extensions/afrux-forum-widgets-core/common/extend/Widgets';\nimport TrendsWidget from './components/widget';\nimport { extName } from '../r';\n\nexport default function (app: Application) {\n  new Widgets()\n    .add({\n      key: 'liplum-trends-widget',\n      component: TrendsWidget,\n      isDisabled: false,\n      isUnique: true,\n      placement: 'end',\n      position: 2,\n    })\n    .extend(app, extName);\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","_setPrototypeOf","t","e","setPrototypeOf","bind","__proto__","extName","TrendsWidget","_Widget","_this","_len","arguments","length","args","Array","_key","apply","concat","loading","trends","create","constructor","_proto","className","icon","title","app","trans","content","this","m","LoadingIndicator","items","ItemList","forEach","trend","add","id","Link","href","attributes","shareUrl","count","commentCount","toArray","oncreate","vnode","fetchTrends","_this2","method","url","attribute","then","response","data","redraw","error","console","Widget","commonApp","Widgets","component","isDisabled","isUnique","placement","position","extend"],"sourceRoot":""}